#!/bin/bash

function create-spn() {
    serverApplicationId=$(az ad app create \
        --display-name "${AKSNAME}-Server" \
        --identifier-uris "https://${AKSNAME}-Server" \
        --query appId -o tsv)
    az ad app update \
        --id $serverApplicationId \
        --set groupMembershipClaims=All
    az ad sp create --id $serverApplicationId
    serverApplicationSecret=$(az ad sp credential reset \
        --name $serverApplicationId \
        --credential-description "AKSPassword" \
        --query password -o tsv)
    az ad app permission add \
        --id $serverApplicationId \
        --api 00000003-0000-0000-c000-000000000000 \
        --api-permissions e1fe6dd8-ba31-4d61-89e7-88639da4683d=Scope 06da0dbc-49e2-44d2-8312-53f166ab848a=Scope 7ab1d382-f21e-4acd-a863-ba3e13f7da61=Role
    az ad app permission grant \
        --id $serverApplicationId \
        --api 00000003-0000-0000-c000-000000000000
    az ad app permission admin-consent --id $serverApplicationId
    clientApplicationId=$(az ad app create \
        --display-name "${AKSNAME}-Client" \
        --native-app \
        --reply-urls "https://${AKSNAME}-Client" \
        --query appId -o tsv)
    az ad sp create --id $clientApplicationId
    oAuthPermissionId=$(az ad app show \
        --id $serverApplicationId \
        --query "oauth2Permissions[0].id" -o tsv)
    az ad app permission add \
        --id $clientApplicationId \
        --api $serverApplicationId \
        --api-permissions $oAuthPermissionId=Scope
    az ad app permission grant \
        --id $clientApplicationId \
        --api $serverApplicationId
    az keyvault secret purge \
        --name "${AKSNAME}-Server" \
        --vault-name $KEYVAULT \
        --output json
    sleep 30
    az keyvault secret set \
        --name "${AKSNAME}-Server" \
        --vault-name $KEYVAULT \
        --description "${AKSNAME}-Server" \
        --value $serverApplicationId \
        --output json
    az keyvault secret purge \
        --name "${AKSNAME}-Server" \
        --vault-name $KEYVAULT \
        --output json
    sleep 30
    az keyvault secret set \
        --name "${AKSNAME}-Server-secret" \
        --vault-name $KEYVAULT \
        --description "${AKSNAME}-Server-secret" \
        --value $serverApplicationSecret \
        --output json
    az keyvault secret purge \
        --name "${AKSNAME}-Client" \
        --vault-name $KEYVAULT \
        --output json
    sleep 30
    az keyvault secret set \
        --name "${AKSNAME}-Client" \
        --vault-name $KEYVAULT \
        --description "${AKSNAME}-Client" \
        --value $clientApplicationId \
        --output json
}

function show() {
    az ad sp show \
        --display-name "${AKSNAME}-Client" \
        --native-app \
        --reply-urls "https://${AKSNAME}-Client" \
        --query appId -o tsv
}

function delete() {
    az ad sp show \
        --display-name "${AKSNAME}-Client" \
        --native-app \
        --reply-urls "https://${AKSNAME}-Client" \
        --query appId -o tsv
    az ad sp show \
        --display-name "${AKSNAME}-Server" \
        --native-app \
        --reply-urls "https://${AKSNAME}-Server" \
        --query appId -o tsv
}
