# Service Principal for AKS
resource "azuread_application" "aks_sp" {
  name                       = "${var.prefix}-${var.environment}-${var.facing}-aks"
  homepage                   = "https://${var.prefix}-${var.environment}-${var.facing}-aks"
  #identifier_uris            = ["https://${var.prefix}-${var.environment}-${var.facing}-aks"]
  #reply_urls                 = ["https://${var.prefix}-${var.environment}-${var.facing}-aks"]
  available_to_other_tenants = false
  oauth2_allow_implicit_flow = false
}

resource "azuread_service_principal" "aks_sp" {
  application_id = azuread_application.aks_sp.application_id
}

resource "random_password" "aks_sp_pwd" {
  length  = 16
  special = true
}

resource "azuread_service_principal_password" "aks_sp_pwd" {
  service_principal_id = azuread_service_principal.aks_sp.id
  value                = random_password.aks_sp_pwd.result
  end_date             = "2024-01-01T01:02:03Z"
}

# Add records to Azure KeyVault
resource "azurerm_key_vault_secret" "kv_secret_aks_sp" {
  count = var.provision_key_vault ? 1 : 0

  name         = "application-id-kv-sp"
  value        = "azuread_application.aks_sp.application_id"
  key_vault_id = azurerm_key_vault.kv[0].id

  tags = var.tags
}

resource "azurerm_key_vault_secret" "kv_secret_aks_sp_pwd" {
  count = var.provision_key_vault ? 1 : 0

  name         = "application-id-kv-sp-pwd"
  value        = "random_password.aks_sp_pwd.result"
  key_vault_id = azurerm_key_vault.kv[0].id

  tags = var.tags
}

resource "azurerm_role_assignment" "aks_sp_role_assignment" {
  scope                = data.azurerm_subscription.current.id
  role_definition_name = "Contributor"
  principal_id         = azuread_service_principal.aks_sp.id

  depends_on = [
    azuread_service_principal_password.aks_sp_pwd
  ]
}

#Roles
resource "azurerm_role_assignment" "ra1" {
  scope                = azurerm_subnet.kubesubnet.id
  role_definition_name = "Network Contributor"
  principal_id         = azuread_service_principal.aks_sp.id

  depends_on = [
    azurerm_virtual_network.test,
    azuread_application.aks_sp
  ]
}


resource "azurerm_role_assignment" "ra2" {
  scope                = azurerm_user_assigned_identity.Microservice_Identity.id
  role_definition_name = "Managed Identity Operator"
  principal_id         = azuread_service_principal.aks_sp.id

  depends_on = [
    azurerm_user_assigned_identity.Microservice_Identity,
    azuread_application.aks_sp
  ]
}

resource "azurerm_role_assignment" "ra4" {
  scope                = azurerm_resource_group.rg.id
  role_definition_name = "Reader"
  principal_id         = azurerm_user_assigned_identity.Microservice_Identity.principal_id
  depends_on = [
    azurerm_user_assigned_identity.Microservice_Identity
  ]
}

# # Create an Azure Identity to serve as the Pod Identity for the demo service on AKS ##
resource "azurerm_user_assigned_identity" "Microservice_Identity" {
  name                = "${var.prefix}-${var.environment}-${var.facing}-identity"
  location            = azurerm_resource_group.rg.location
  resource_group_name = azurerm_resource_group.rg.name

  tags = var.tags
}

# Grant general KeyVault access to the Pod Identity if provision_key_vault is true ##
resource "azurerm_role_assignment" "kv_reader" {
  count = var.provision_key_vault ? 1 : 0

  scope                = azurerm_key_vault.kv[0].id
  principal_id         = azurerm_user_assigned_identity.Microservice_Identity.principal_id
  role_definition_name = "Reader"
}

# Grant general Blob storage access to the Pod Identity if provision_blob_storage is true ##
resource "azurerm_role_assignment" "blob_contributor" {
  count = var.provision_blob_storage ? 1 : 0

  scope                = azurerm_storage_account.blob_storage[0].id
  principal_id         = azurerm_user_assigned_identity.Microservice_Identity.principal_id
  role_definition_name = "Storage Blob Data Contributor"
}

resource "azurerm_role_assignment" "blob_owner" {
  count = var.provision_blob_storage ? 1 : 0

  scope                = azurerm_storage_account.blob_storage[0].id
  principal_id         = azurerm_user_assigned_identity.Microservice_Identity.principal_id
  role_definition_name = "Storage Account Contributor"
}